{"version":3,"file":"comment-plugin.min.js","sources":["../src/utils.js","../src/draggable.js","../src/comment.js","../src/frame-comment.js","../src/inline-comment.js","../src/manager.js","../src/index.js"],"sourcesContent":["const min = (arr) => arr.length === 0 ? 0 : Math.min(...arr);\nconst max = (arr) => arr.length === 0 ? 0 : Math.max(...arr);\n\nexport function intersectRect(r1, r2) {\n    return !(\n        r2.left > r1.right || \n        r2.right < r1.left || \n        r2.top > r1.bottom ||\n        r2.bottom < r1.top\n    );\n}\n\nexport function containsRect(r1, r2) {\n    return (\n        r2.left > r1.left && \n        r2.right < r1.right && \n        r2.top > r1.top &&\n        r2.bottom < r1.bottom\n    );\n}\n\nexport function nodesBBox(editor, nodes, margin) {\n    const left = min(nodes.map(node => node.position[0])) - margin;\n    const top = min(nodes.map(node => node.position[1])) - margin;\n    const right = max(nodes.map(node => node.position[0] + editor.view.nodes.get(node).el.clientWidth)) + 2 * margin;\n    const bottom = max(nodes.map(node => node.position[1] + editor.view.nodes.get(node).el.clientHeight)) + 2 * margin;\n    \n    return {\n        left,\n        right,\n        top,\n        bottom,\n        width: Math.abs(left - right),\n        height: Math.abs(top - bottom),\n        getCenter: () => {\n            return [\n                (left + right) / 2,\n                (top + bottom) / 2\n            ];\n        }\n    };\n}\n\nexport function listenWindow(event, handler) {\n    window.addEventListener(event, handler);\n    \n    return () => {\n        window.removeEventListener(event, handler);\n    }\n}","import { listenWindow } from './utils';\n\nexport default class Draggable {\n\n    constructor(el, onStart = () => {}, onTranslate = () => {}, onDrag = () => {}) {\n        this.mouseStart = null;\n\n        this.el = el;\n        this.onStart = onStart;\n        this.onTranslate = onTranslate;\n        this.onDrag = onDrag;\n\n        this.destroy = this.initEvents(el);\n    }\n\n    initEvents(el) {\n        el.addEventListener('pointerdown', this.down.bind(this));\n        \n        const destroyMove = listenWindow('pointermove', this.move.bind(this))\n        const destroyUp = listenWindow('pointerup', this.up.bind(this));\n\n        return () => {\n            destroyMove();\n            destroyUp();\n        }\n    }\n\n    getCoords(e) {\n        const props = e.touches ? e.touches[0] : e;\n\n        return [props.pageX, props.pageY];\n    }\n\n    down(e) {\n        e.stopPropagation();\n\n        if (e.which === 1) {\n            this.mouseStart = this.getCoords(e);\n            this.onStart();\n        }\n    }\n\n    move(e) {\n        if (!this.mouseStart) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        let [x, y] = this.getCoords(e);\n        let delta = [x - this.mouseStart[0], y - this.mouseStart[1]];\n        let zoom = this.el.getBoundingClientRect().width / this.el.offsetWidth;\n\n        this.onTranslate(delta[0] / zoom, delta[1] / zoom);\n    }\n\n    up() {\n        if (this.mouseStart) {\n            this.onDrag();\n        }\n\n        this.mouseStart = null;\n    }\n\n    // mutable method\n    destroy() { }\n}\n","import Draggable from './draggable';\n\nexport default class Comment {\n    constructor(text, editor) {\n        this.editor = editor;\n        this.text = text;\n        this.scale = 1;\n        this.x = 0;\n        this.y = 0;\n        this.dragPosition = [0, 0];\n        this.links = [];\n \n        this.initView();\n        this.update();\n    }\n\n    initView() {\n        this.el = document.createElement('div');\n        this.el.tabIndex = 1;\n        this.el.addEventListener('contextmenu', this.onContextMenu.bind(this));\n        this.el.addEventListener('focus', this.onFocus.bind(this));\n        this.el.addEventListener('blur', this.onBlur.bind(this));\n    \n        this.draggable = new Draggable(this.el, () => this.onStart(), (dx, dy) => this.onTranslate(dx, dy));\n    }\n\n    linkTo(ids) {\n        this.links = ids || [];\n    }\n\n    linkedTo(node) {\n        return this.links.includes(node.id);\n    }\n\n    k() {\n        return 1;\n    }\n\n    onContextMenu(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.editor.trigger('editcomment', this);\n    }\n\n    onFocus() {\n        this.scale = Math.max(1, 1 / this.k());\n        this.update();\n        this.editor.trigger('commentselected', this)\n    }\n\n    focused() {\n        return document.activeElement === this.el;\n    }\n\n    onBlur() {\n        this.scale = 1;\n        this.update()\n    }\n\n    blur() {\n        this.el.blur();\n    }\n\n    onStart() {\n        this.dragPosition = [this.x, this.y];\n    }\n\n    onTranslate (dx, dy) {\n        const [x, y] = this.dragPosition;\n\n        this.x = x + this.scale * dx;\n        this.y = y + this.scale * dy;\n        \n        this.update();\n        this.editor.trigger('commenttranslate', this);\n    }\n\n    update() {\n        this.el.innerText = this.text;\n        this.el.style.transform = `translate(${this.x}px, ${this.y}px) scale(${this.scale})`;\n    }\n\n    toJSON() {\n        return {\n            text: this.text,\n            position: [ this.x, this.y ],\n            links: this.links\n        }\n    }\n\n    destroy() {\n        this.draggable.destroy();\n    }\n}","import Comment from './comment';\nimport { containsRect } from './utils';\n\nexport default class FrameComment extends Comment {\n    constructor(text, editor) {\n        super(text, editor);\n        \n        this.width = 0;\n        this.height = 0;\n        this.links = [];\n        this.el.className = 'frame-comment';\n    }\n\n    linkedNodesView() {\n        return this.links\n            .map(id => this.editor.nodes.find(n => n.id === id))\n            .map(node => this.editor.view.nodes.get(node));\n    }\n\n    onStart() {\n        super.onStart();\n        this.linkedNodesView().map(nodeView => nodeView.onStart())\n    }\n\n    onTranslate(dx, dy) {\n        super.onTranslate(dx, dy);\n        this.linkedNodesView().map(nodeView => nodeView.onDrag(dx, dy))\n    }\n\n    isContains(node) {\n        const commRect = this.el.getBoundingClientRect();\n        const view = this.editor.view.nodes.get(node);\n    \n        return containsRect(commRect, view.el.getBoundingClientRect());\n    }\n\n    update() {\n        super.update();\n\n        this.el.style.width = this.width+'px';\n        this.el.style.height = this.height+'px';\n    }\n\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            type: 'frame',\n            width: this.width,\n            height: this.height\n        }\n    }\n}","import Comment from './comment';\nimport { intersectRect } from './utils';\n\nexport default class InlineComment extends Comment {\n    constructor(text, editor) {\n        super(text, editor);\n        \n        this.el.className = 'inline-comment';\n        this.el.addEventListener('mouseup', this.onDrag.bind(this));\n    }\n\n    onDrag() {\n        const intersection = this.getIntersectNode();\n\n        this.linkTo(intersection ? [intersection.node.id] : []);\n    }\n\n    getIntersectNode() {\n        const commRect = this.el.getBoundingClientRect();\n\n        return Array.from(this.editor.view.nodes)\n            .map(([node, view]) => {\n                return { node, rect: view.el.getBoundingClientRect() };\n            })\n            .find(({ rect }) => {\n                return intersectRect(commRect, rect);\n            });\n    }\n\n    offset(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n        this.update();\n    } \n\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            type: 'inline'\n        }\n    }\n}","import FrameComment from './frame-comment';\nimport InlineComment from './inline-comment';\n\nexport default class CommentManager {\n    constructor(editor) {\n        this.editor = editor;\n        this.comments = [];\n\n        editor.on('zoomed', () => {\n            this.comments.map(c => c.blur.call(c));\n        });\n    }\n\n    addInlineComment(text, [ x, y ], links = []) {\n        let comment = new InlineComment(text, this.editor);\n\n        comment.k = () => this.editor.view.area.transform.k;\n        comment.x = x;\n        comment.y = y;\n        comment.linkTo(links);\n\n        this.addComment(comment);\n    }\n\n    addFrameComment(text, [ x, y ], links = [], width = 0, height = 0) {\n        let comment = new FrameComment(text, this.editor);\n\n        comment.x = x;\n        comment.y = y;\n        comment.width = width;\n        comment.height = height;\n        comment.linkTo(links);\n        \n        this.addComment(comment);\n    }\n\n    addComment(comment) {\n        comment.update();\n        this.comments.push(comment);\n\n        this.editor.view.area.appendChild(comment.el);\n        this.editor.trigger('commentcreated', comment);\n    }\n\n    deleteComment(comment) {\n        this.editor.view.area.removeChild(comment.el);\n        this.comments.splice(this.comments.indexOf(comment), 1);\n        comment.destroy();\n\n        this.editor.trigger('commentremoved', comment);\n    }\n\n    deleteFocusedComment() {\n        const focused = this.comments.find(c => c.focused());\n        \n        if (focused)\n            this.deleteComment(focused)\n    }\n\n    deleteComments() {\n        [...this.comments].map(c => this.deleteComment(c));\n    }\n\n    toJSON() {\n        return this.comments.map(c => c.toJSON())\n    }\n\n    fromJSON(list) {\n        this.deleteComments();\n        list.map(item => {\n            if (item.type === 'frame') {\n                this.addFrameComment(item.text, item.position, item.links, item.width, item.height)\n            } else {\n                this.addInlineComment(item.text, item.position, item.links);\n            }\n        });\n    }\n\n    destroy() {\n        this.comments.forEach(comment => comment.destroy());\n    }\n}","import './style.sass';\nimport CommentManager from './manager';\nimport FrameComment from './frame-comment';\nimport InlineComment from './inline-comment';\nimport { nodesBBox, listenWindow } from './utils';\n\n// eslint-disable-next-line max-statements\nfunction install(editor, { margin = 30, disableBuiltInEdit = false }) {\n    editor.bind('commentselected');\n    editor.bind('commentcreated');\n    editor.bind('commentremoved');\n    editor.bind('syncframes');\n    editor.bind('addcomment');\n    editor.bind('removecomment');\n    editor.bind('editcomment');\n    editor.bind('commenttranslate');\n\n    const manager = new CommentManager(editor);\n\n    if (!disableBuiltInEdit) { \n        editor.on('editcomment', (comment) => {\n            comment.text = prompt('Edit comment', comment.text)\n            comment.update();\n        });\n    }\n\n    const destroyKeyListener = listenWindow('keydown', function handleKey(e) {\n        if (e.code === 'KeyF' && e.shiftKey) {\n            const ids = editor.selected.list.map(node => node.id);\n            const nodes = ids.map(id => editor.nodes.find(n => n.id === id));\n    \n            editor.trigger('addcomment', ({ type: 'frame', nodes }))\n        } else if (e.code === 'KeyC' && e.shiftKey) {\n            const position = Object.values(editor.view.area.mouse);\n\n            editor.trigger('addcomment', ({ type: 'inline', position }))\n        } else if (e.code === 'Delete') {\n            manager.deleteFocusedComment();\n        }\n    });\n\n    editor.on('addcomment', ({ type, text, nodes, position }) => {\n        if (type === 'inline') {\n            manager.addInlineComment(text, position);\n        } else if (type === 'frame') {\n            const { left, top, width, height } = nodesBBox(editor, nodes, margin);\n            const ids = nodes.map(n => n.id);\n        \n            manager.addFrameComment(text, position || [ left, top ], ids, width, height);\n        } else {\n            throw new Error(`type '${type}' not supported`);\n        }\n    })\n\n    editor.on('removecomment', ({ comment, type }) => {\n        if (comment) {\n            manager.deleteComment(comment)\n        } else if (type === 'inline') {\n            manager.comments\n                .filter(c => c instanceof InlineComment)\n                .map(c => manager.deleteComment(c))\n        } else if (type === 'frame') {\n            manager.comments\n                .filter(c => c instanceof FrameComment)\n                .map(c => manager.deleteComment(c))\n        }\n    });\n\n    editor.on('syncframes', () => {\n        manager.comments\n            .filter(comment => comment instanceof FrameComment)\n            .map(comment => {\n                const nodes = comment.links.map(id => editor.nodes.find(n => n.id === id));\n                const { left, top, width, height } = nodesBBox(editor, nodes, margin);\n\n                comment.x = left;\n                comment.y = top;\n                comment.width = width;\n                comment.height = height;\n                \n                comment.update()\n            });\n    })\n\n    editor.on('nodetranslated', ({ node, prev }) => {\n        const dx = node.position[0] - prev[0];\n        const dy = node.position[1] - prev[1];\n\n        manager.comments\n            .filter(comment => comment instanceof InlineComment)\n            .filter(comment => comment.linkedTo(node))\n            .map(comment => comment.offset(dx, dy));\n    });\n\n    editor.on('nodedraged', node => {\n        manager.comments\n            .filter(comment => comment instanceof FrameComment)\n            .filter(comment => {\n                const contains = comment.isContains(node);\n                const links = comment.links.filter(id => id !== node.id);\n\n                comment.links = contains ? [...links, node.id] : links;\n            });\n    });\n\n    editor.on('commentselected', () => {\n        const list = [...editor.selected.list];\n\n        editor.selected.clear();\n        list.map(node => node.update ? node.update() : null);\n    })\n\n    editor.on('export', data => {\n        data.comments = manager.toJSON();\n    });\n\n    editor.on('import', data => {\n        manager.fromJSON(data.comments || []);\n    });\n\n    if (editor.exist('clear')) { // compatibility with previous versions\n        editor.on('clear', () => manager.deleteComments())\n    }\n\n    editor.on('destroy', () => {\n        manager.destroy()\n        destroyKeyListener();\n    });\n}\n\nexport default {\n    name: 'comment',\n    install\n}"],"names":["min","arr","length","Math","max","nodesBBox","editor","nodes","margin","left","map","node","position","top","right","view","get","el","clientWidth","bottom","clientHeight","width","abs","height","getCenter","listenWindow","event","handler","window","addEventListener","removeEventListener","Draggable","onStart","onTranslate","onDrag","mouseStart","destroy","this","initEvents","down","bind","destroyMove","move","destroyUp","up","e","props","touches","pageX","pageY","stopPropagation","which","getCoords","preventDefault","x","y","delta","zoom","getBoundingClientRect","offsetWidth","Comment","text","scale","dragPosition","links","initView","update","document","createElement","tabIndex","onContextMenu","onFocus","onBlur","draggable","_this","dx","dy","ids","includes","id","trigger","k","activeElement","blur","innerText","style","transform","FrameComment","className","_this2","find","n","linkedNodesView","nodeView","r1","r2","commRect","type","InlineComment","intersection","getIntersectNode","linkTo","Array","from","rect","CommentManager","comments","on","c","call","comment","area","addComment","push","appendChild","removeChild","splice","indexOf","focused","deleteComment","_this3","toJSON","list","deleteComments","item","_this4","addFrameComment","addInlineComment","forEach","name","install","disableBuiltInEdit","manager","prompt","destroyKeyListener","code","shiftKey","selected","Object","values","mouse","deleteFocusedComment","Error","filter","prev","linkedTo","offset","contains","isContains","clear","data","fromJSON","exist"],"mappings":"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"}